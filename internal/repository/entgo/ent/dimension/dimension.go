// Code generated by entc, DO NOT EDIT.

package dimension

import (
	"time"
)

const (
	// Label holds the string label denoting the dimension type in the database.
	Label = "dimension"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldDisplayTitle holds the string denoting the display_title field in the database.
	FieldDisplayTitle = "display_title"
	// FieldDisplayValue holds the string denoting the display_value field in the database.
	FieldDisplayValue = "display_value"
	// FieldMeta holds the string denoting the meta field in the database.
	FieldMeta = "meta"
	// EdgeItem holds the string denoting the item edge name in mutations.
	EdgeItem = "item"
	// Table holds the table name of the dimension in the database.
	Table = "dimensions"
	// ItemTable is the table that holds the item relation/edge. The primary key declared below.
	ItemTable = "item_dimensions"
	// ItemInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	ItemInverseTable = "items"
)

// Columns holds all SQL columns for dimension fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldTitle,
	FieldValue,
	FieldDisplayTitle,
	FieldDisplayValue,
	FieldMeta,
}

var (
	// ItemPrimaryKey and ItemColumn2 are the table columns denoting the
	// primary key for the item relation (M2M).
	ItemPrimaryKey = []string{"item_id", "dimension_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// ValueValidator is a validator for the "value" field. It is called by the builders before save.
	ValueValidator func(string) error
)
