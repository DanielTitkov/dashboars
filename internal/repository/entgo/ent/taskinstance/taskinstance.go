// Code generated by entc, DO NOT EDIT.

package taskinstance

import (
	"time"
)

const (
	// Label holds the string label denoting the taskinstance type in the database.
	Label = "task_instance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldStartTime holds the string denoting the start_time field in the database.
	FieldStartTime = "start_time"
	// FieldEndTime holds the string denoting the end_time field in the database.
	FieldEndTime = "end_time"
	// FieldAttempt holds the string denoting the attempt field in the database.
	FieldAttempt = "attempt"
	// FieldSuccess holds the string denoting the success field in the database.
	FieldSuccess = "success"
	// FieldRunning holds the string denoting the running field in the database.
	FieldRunning = "running"
	// FieldError holds the string denoting the error field in the database.
	FieldError = "error"
	// FieldMeta holds the string denoting the meta field in the database.
	FieldMeta = "meta"
	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"
	// EdgeTask holds the string denoting the task edge name in mutations.
	EdgeTask = "task"
	// Table holds the table name of the taskinstance in the database.
	Table = "task_instances"
	// ItemsTable is the table that holds the items relation/edge.
	ItemsTable = "items"
	// ItemsInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	ItemsInverseTable = "items"
	// ItemsColumn is the table column denoting the items relation/edge.
	ItemsColumn = "task_instance_items"
	// TaskTable is the table that holds the task relation/edge.
	TaskTable = "task_instances"
	// TaskInverseTable is the table name for the Task entity.
	// It exists in this package in order to avoid circular dependency with the "task" package.
	TaskInverseTable = "tasks"
	// TaskColumn is the table column denoting the task relation/edge.
	TaskColumn = "task_instances"
)

// Columns holds all SQL columns for taskinstance fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldStartTime,
	FieldEndTime,
	FieldAttempt,
	FieldSuccess,
	FieldRunning,
	FieldError,
	FieldMeta,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "task_instances"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"task_instances",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultStartTime holds the default value on creation for the "start_time" field.
	DefaultStartTime func() time.Time
	// DefaultAttempt holds the default value on creation for the "attempt" field.
	DefaultAttempt int
	// DefaultRunning holds the default value on creation for the "running" field.
	DefaultRunning bool
)
